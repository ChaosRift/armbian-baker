name: "Test ORAS Authentication"
run-name: "Test ORAS Auth by @${{ github.actor }}"

on:
  workflow_dispatch:

env:
  GH_TOKEN: ${{ github.token }}
  GHCR_TOKEN: ${{ github.token }}

jobs:
  test-oras-auth:
    name: "Test ORAS GHCR Authentication"
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'diverger' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: armbian/build
          ref: main
          fetch-depth: 1
          path: build
          clean: true

      - name: Docker Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: "${{ github.actor }}"
          password: ${{ env.GHCR_TOKEN }}

      - name: Test ORAS Authentication - Docker Credentials Only
        run: |
          cd build

          # Test 1: Try with only Docker credentials (no GHCR_TOKEN)
          echo "=== Testing Docker credentials only ==="
          export DEBUG=yes

          # Try to check if a known kernel artifact exists in GHCR
          bash ./compile.sh \
            oci-kernel-info-has-artifact \
            KERNEL_MAJOR_MINOR="6.12" \
            KERNEL_GIT_SHA="9d2eH2313" \
            LINUXFAMILY="rockchip64" \
            REVISION="S5375-Db228-P0000-C9d2eH2313-HK01ba-Vc222-B9bbb-R448a" \
            KERNELBRANCH="current" \
            SHARE_LOG=no || echo "Docker credentials test failed"

      - name: Test ORAS Authentication - With GHCR_TOKEN Fallback
        run: |
          cd build

          echo "=== Testing with GHCR_TOKEN fallback ==="
          export GHCR_TOKEN="${{ env.GHCR_TOKEN }}"
          export DEBUG=yes

          # Try to check if a known kernel artifact exists in GHCR
          bash ./compile.sh \
            oci-kernel-info-has-artifact \
            KERNEL_MAJOR_MINOR="6.12" \
            KERNEL_GIT_SHA="9d2eH2313" \
            LINUXFAMILY="rockchip64" \
            REVISION="S5375-Db228-P0000-C9d2eH2313-HK01ba-Vc222-B9bbb-R448a" \
            KERNELBRANCH="current" \
            SHARE_LOG=no \
            GHCR_TOKEN="${{ env.GHCR_TOKEN }}"
            GHCR_TOKEN="${{ env.GHCR_TOKEN }}"
